---
swagger: "2.0"
info:
  description: "API for Machine-Learning Agent - Train/Run modes available, through\
    \ direct API call"
  version: "0.2"
  title: "Mimir API"
host: "localhost"
basePath: "/v1"
schemes:
- "https"
paths:
  /models:
    get:
      summary: "Get all metadata about models available"
      operationId: "get_models"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "A json array with all the models' metadata"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/model_metadata"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      summary: "Add a new model"
      operationId: "add_model"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/model"
      responses:
        200:
          description: "Successful model upload"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /models/{modelId}:
    get:
      summary: "Get a Model"
      operationId: "get_model"
      produces:
      - "application/json"
      parameters:
      - name: "modelId"
        in: "path"
        description: "ID of model to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "A json array with the model's properties and the model's string"
          schema:
            $ref: "#/definitions/model"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      summary: "Update model"
      operationId: "update_model"
      parameters:
      - name: "modelId"
        in: "path"
        description: "ID of model to get"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/model"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /data:
    get:
      summary: "Get all metadata"
      operationId: "get_data_set"
      produces:
      - "application/json"
      parameters: []
      responses:
        200:
          description: "A json array with all the datasets' metadata"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/dataset_metadata"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      summary: "Add a new dataset"
      operationId: "add_dataset"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/dataset"
      responses:
        200:
          description: "Successful dataset upload"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      summary: "Update dataset"
      operationId: "update_dataset"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/dataset"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /configuration:
    get:
      summary: "Get metadata about all configurations"
      operationId: "get_configurations"
      parameters: []
      responses:
        200:
          description: "A json array with the model's properties and the model's string"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/configuration"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    post:
      summary: "Add a new configuration"
      operationId: "add_configuration"
      parameters:
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/configuration"
      responses:
        200:
          description: "Successfully created new configuration"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /configuration/{configurationId}:
    get:
      summary: "Get a Configuration"
      operationId: "get_configuration"
      parameters:
      - name: "configurationId"
        in: "path"
        description: "ID of model to get"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "A json array with the configuration's properties and the configuration's\
            \ string"
          schema:
            $ref: "#/definitions/configuration"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
    put:
      summary: "Update configuration"
      operationId: "update_configuration"
      parameters:
      - name: "configurationId"
        in: "path"
        description: "ID of model to get"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/configuration"
      responses:
        405:
          description: "Invalid input"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /configuration/{configurationId}/train:
    post:
      summary: "train a given configuration with the provided parameters"
      operationId: "train_configuration"
      parameters:
      - name: "configurationId"
        in: "path"
        description: "ID of model to get"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/train"
      responses:
        200:
          description: "A json object with details about the metrics reached during\
            \ train"
          schema:
            $ref: "#/definitions/train_results"
        400:
          description: "Invalid result"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
  /configuration/{configurationId}/predict:
    post:
      summary: "predict using a configuration with the provided inputs"
      operationId: "predict_configuration"
      parameters:
      - name: "configurationId"
        in: "path"
        description: "ID of model to get"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        required: true
        schema:
          $ref: "#/definitions/predict_input"
      responses:
        200:
          description: "A json object with details about the metrics reached during\
            \ train"
          schema:
            $ref: "#/definitions/predict_results"
        400:
          description: "Invalid result"
      x-swagger-router-controller: "swagger_server.controllers.default_controller"
definitions:
  model:
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      content:
        type: "string"
    example:
      name: "name"
      id: 0
      content: "content"
  model_metadata:
    properties:
      id:
        type: "integer"
      name:
        type: "string"
    example:
      name: "name"
      id: 0
  dataset:
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      content:
        type: "string"
  dataset_metadata:
    properties:
      id:
        type: "integer"
      name:
        type: "string"
    example:
      name: "name"
      id: 0
  configuration:
    properties:
      id:
        type: "integer"
      name:
        type: "string"
      dataset_id:
        type: "integer"
      model_id:
        type: "integer"
    example:
      dataset_id: 6
      name: "name"
      id: 0
      model_id: 1
  train:
    properties:
      id:
        type: "integer"
      dataset_id:
        type: "integer"
      model_id:
        type: "integer"
  train_results:
    properties:
      id:
        type: "integer"
      dataset_id:
        type: "integer"
      model_id:
        type: "integer"
      metric:
        type: "string"
      metric_value:
        type: "string"
    example:
      metric: "metric"
      dataset_id: 6
      metric_value: "metric_value"
      id: 0
      model_id: 1
  predict_input:
    properties:
      id:
        type: "integer"
      dataset_id:
        type: "integer"
      model_id:
        type: "integer"
  predict_results:
    properties:
      id:
        type: "integer"
      dataset_id:
        type: "integer"
      model_id:
        type: "integer"
      metric:
        type: "string"
      metric_value:
        type: "string"
    example:
      metric: "metric"
      dataset_id: 6
      metric_value: "metric_value"
      id: 0
      model_id: 1
